import numpy as np
import matplotlib.pyplot as plt

 
'''
well	Hausen HH1		Temperature measurement:			
location	Hausen / Schweiz			Measurement		Date
geographic longitude 	657836	m		min	max	
geographic lattitude 	256939	m	HRT	23	395	24.6.83
Elevation	380	m a.s.	 		 	 
Depth	480	m				 
Drilling date	1983		Gw-level [depth]:	23,00	Datum:	24.06.1983
Purpose	Thermal water		Geological Profile:	yes		
			Reference:	Gorhan & Griesser, 1988 		
'''

temperature = np.array([11.91, 11.91, 11.92, 11.94, 11.95, 11.97, 11.99, 12.10, 12.12, 12.15, 12.16, 12.26, 12.29, 12.45, 12.46, 12.49, 12.52, 12.57, 12.62, 12.65, 12.72, 12.75, 12.95, 12.99, 13.04, 13.09, 13.16, 13.22, 13.26, 13.32, 13.37, 13.44, 13.48, 13.52, 13.57, 13.64, 13.68, 13.74, 13.79, 13.82, 13.86, 14.02, 14.07, 14.10, 14.13, 14.18, 14.22, 14.26, 14.29, 14.33, 14.39, 14.44, 14.50, 14.53, 14.59, 14.63, 14.68, 14.75, 14.80, 14.84, 14.90, 14.95, 15.01, 15.08, 15.13, 15.19, 15.24, 15.31, 15.37, 15.40, 15.46, 15.51, 15.57, 15.63, 15.67, 15.72, 15.77, 15.83, 15.87, 15.91, 15.98, 16.04, 16.08, 16.13, 16.20, 16.26, 16.32, 16.37, 16.42, 16.47, 16.54, 16.59, 16.65, 16.72, 16.78, 16.82, 16.87, 16.95, 16.99, 17.05, 17.12, 17.17, 17.21, 17.25, 17.32, 17.36, 17.40, 17.46, 17.51, 17.55, 17.61, 17.67, 17.71, 17.85, 17.81, 17.84, 17.90, 17.94, 17.98, 18.04, 18.08, 18.12, 18.16, 18.21, 18.27, 18.31, 18.36, 18.41, 18.46, 18.50, 18.54, 18.58, 18.64, 18.69, 18.73, 18.77, 18.81, 18.86, 18.91, 18.95, 18.99, 19.04, 19.08, 19.13, 19.17, 19.24, 19.28, 19.32, 19.37, 19.41, 19.46, 19.51, 19.55, 19.59, 19.63, 19.68, 19.71, 19.77, 19.81, 19.86, 19.88, 19.93, 20.00, 20.02, 20.06, 20.10, 20.15, 20.19, 20.23, 20.27, 20.30, 20.35, 20.39, 20.44, 20.48, 20.52, 20.56, 20.62, 20.67, 20.71, 20.76, 20.80, 20.84, 20.88, 20.93, 20.97, 21.01, 21.06, 21.12, 21.17, 21.22, 21.27, 21.33, 21.36, 21.43, 21.46, 21.51, 21.56, 21.61, 21.65, 21.70, 21.75, 21.81, 21.84, 21.89, 21.94, 21.98, 22.02, 22.13, 22.20, 22.23, 22.27, 22.31, 22.36, 22.40, 22.45, 22.48, 22.53, 22.57, 22.62, 22.66, 22.70, 22.73, 22.78, 22.85, 22.87, 22.90, 22.93, 22.98, 23.03, 23.03, 23.06, 23.10, 23.14, 23.18, 23.22, 23.27, 23.31, 23.34, 23.38, 23.42, 23.47, 23.49, 23.53, 23.58, 23.63, 23.66, 23.71, 23.75, 23.79, 23.83, 23.86, 23.91, 23.95, 24.00, 24.04, 24.09, 24.12, 24.15, 24.18, 24.22, 24.26, 24.29, 24.32, 24.35, 24.39, 24.42, 24.46, 24.50, 24.53, 24.58, 24.61, 24.66, 24.69, 24.73, 24.78, 24.82, 24.86, 24.91, 24.94, 24.98, 25.03, 25.06, 25.10, 25.16, 25.18, 25.22, 25.27, 25.31, 25.35, 25.39, 25.44, 25.46, 25.51, 25.51, 25.55, 25.60, 25.64, 25.68, 25.73, 25.77, 25.81, 25.86, 25.90, 25.94, 25.98, 26.02, 26.07, 26.11, 26.14, 26.18, 26.23, 26.31, 26.35, 26.40, 26.43, 26.47, 26.50, 26.54, 26.59, 26.63, 26.67, 26.71, 26.74, 26.78, 26.83, 26.87, 26.91, 26.96, 27.01, 27.04, 27.08, 27.11, 27.15, 27.19, 27.24, 27.28, 27.31, 27.36, 27.39, 27.43, 27.46, 27.51, 27.56, 27.60, 27.64, 27.68, 27.73, 27.77, 27.81, 27.86, 27.89, 27.94, 27.98, 28.02, 28.06, 28.08, 28.16, 28.18, 28.23, 28.26, 28.30, 28.33, 28.38, 28.42, 28.46, 28.50, 28.44, 28.48, 28.61, 28.63, 28.66, 28.69])
#measurement every meter:
depth = np.array([23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395])

#TASK 1
#Determine and plot the temperature gradient. 
#How does it behave for different depth intervals? 
#Suggestion calculate Gradient for z ±5, ±10 and ±20 m


#gradient calculations
#grad_T_10m = 
#grad_T_20m = 
#grad_T_40m = 


#plot gradient results
fig, ax = plt.subplots(1, 4)
ax[0].set_title('$T$')
ax[0].set_ylabel('Depth')
ax[1].set_title(r'$\nabla T_{10m}$')
ax[2].set_title(r'$\nabla T_{20m}$')
ax[3].set_title(r'$\nabla T_{40m}$')
ax[0].plot(temperature, -depth)
ax[1].plot(grad_T_10m, -depth[4:-5])
ax[2].plot(grad_T_20m, -depth[9:-10])
ax[3].plot(grad_T_40m, -depth[19:-20])
plt.tight_layout()
plt.show()

#TASK 2
#Calculate and plot the reduced temperature



#reduced_temperature = 


fig, ax = plt.subplots(1, 3)
ax[0].set_title('$T$')
ax[0].set_ylabel('Depth')
ax[0].set_ylabel('Depth')
ax[1].set_title(r'$\nabla T_{20m}$')
ax[2].set_title(r'reduced temperature')

ax[0].plot(temperature, -depth)
ax[1].plot(grad_T_20m, -depth[9:-10])
ax[2].plot(reduced_temperature, -depth[9:-10])

plt.tight_layout()
plt.show()

#TASK 3
#Is there a correlation of temperature gradient with lithology?


#TASK 4
#Estimate heat flow when the following geological units have a measured thermal conductivity

'''
Unit	    lambda [W m-1 K-1]
Mergel	    2,12
Gipskeuper	2,72
Anhydrid	2,95
'''

#q_upper_layer = 
#q_middle_layer = 
#q_lower_layer = 

print('q:', q_upper_layer, q_middle_layer, q_lower_layer)
print('q_mean:', )

